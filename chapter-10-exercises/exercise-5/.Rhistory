# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(data/gates_money.csv)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
gates_money <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
# Use the View function to look at the loaded data
View(gates_money)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organizations <- gates_money[ ,organizations]
# Create a variable `organization` that contains the `organization` column of
# the dataset
organizations <- gates_money[ ,gates_money$organizations]
organizations
print(organizations)
View(organizations)
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organizations)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organizations <- gates_money[gates_money$organizations]
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organizations)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organizations <- gates_money[[gates_money$organizations]]
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[gates_money$organization]
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[, gates_money$organization]
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[ ,gates_money$organization]
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[gates_money,gates_money$organization]
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[[gates_money$organization]]
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money$organization
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
# What was the mean grant value?
mean(gates_money$total_amount)
# What was the dollar amount of the largest grant?
max(gates_money$total_amount)
# What was the dollar amount of the smallest grant?
min(gates_money$total_amount)
# Which organization received the largest grant?
gates_money[organization, max(gates_money$total_amount)]
# What was the dollar amount of the largest grant?
most_money <- max(gates_money$total_amount)
# What was the dollar amount of the smallest grant?
min_money <- min(gates_money$total_amount)
# Which organization received the largest grant?
gates_money[most_money == gates_money$total_amount, "organization"]
# Which organization received the largest grant?
gates_money[most_money == gates_money$total_amount, organization]
# Which organization received the smallest grant?
gates_money[min_money == gates_money$total_amount, "organization"]
# How many grants were awarded in 2010?
gates_money[, gates_money$start_year == 2010]
# How many grants were awarded in 2010?
nrow(gates_money$Grant.start.date == 2010)
# How many grants were awarded in 2010?
nrow(gates_money$start_year == 2010)
# Which organization received the smallest grant?
gates_money[min_money == gates_money$total_amount, "organization"]
# Which organization received the largest grant?
gates_money[most_money == gates_money$total_amount, "organization"]
# How many grants were awarded in 2010?
nrow(gates_money$start_year == 2010)
# How many grants were awarded in 2010?
length(gates_money$start_year == 2010)
# What was the mean grant value?
mean(gates_money$total_amount)
# How many grants were awarded in 2010?
nrow(gates_money[gates_money$start_year == 2010,])
# Read in the female baby names data file found in the `data` folder into a
# variable called `names`. Remember to NOT treat the strings as factors!
names <- read.csv("data/female_names")
setwd("C:/Users/ericd/OneDrive/Desktop/University of Washington/2. Sophomore Year/Winter Quarter/INFO 201/Info Exercises/book-exercises/chapter-10-exercises/exercise-5")
# Read in the female baby names data file found in the `data` folder into a
# variable called `names`. Remember to NOT treat the strings as factors!
names <- read.csv("data/female_names")
# Read in the female baby names data file found in the `data` folder into a
# variable called `names`. Remember to NOT treat the strings as factors!
names <- read.csv("data/female_names", stringsAsFactors = FALSE)
# Which organization received the smallest grant?
gates_money[min_money == gates_money$total_amount, c("organization", "total_amount")]
# Which organization received the largest grant?
gates_money[most_money == gates_money$total_amount, c("organization", "total_amount")]
# Read in the female baby names data file found in the `data` folder into a
# variable called `names`. Remember to NOT treat the strings as factors!
names <- read.csv("data/female_names.csv", stringsAsFactors = FALSE)
# Create a data frame `names_2013` that contains only the rows for the year 2013
names_2013 <- names$year == 2013
print(names_2013)
View(names)
# Create a data frame `names_2013` that contains only the rows for the year 2013
names_2013 <- names( ,names$year == 2013)
# Create a data frame `names_2013` that contains only the rows for the year 2013
names_2013 <- names[ ,names$year == 2013]
sum(gates_money[gates_money$start_year == "2010", "total_amount"])
sum(gates_money[gates_money$start_year, "total_amount"])
sum(gates_money[, "total_amount"])
